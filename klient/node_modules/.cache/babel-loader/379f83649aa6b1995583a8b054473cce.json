{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.emojify = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/*!\n * react-emojione\n * Copyright(c) 2017 Pedro Ladaria\n * MIT Licensed\n *\n * Emoji provided free by http://emojione.com\n */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _asciiToUnicode = require('./data/ascii-to-unicode');\n\nvar _asciiToUnicode2 = _interopRequireDefault(_asciiToUnicode);\n\nvar _rendererFactory = require('./renderers/renderer-factory');\n\nvar _rendererFactory2 = _interopRequireDefault(_rendererFactory);\n\nvar _emojiFormatConversion = require('./utils/emoji-format-conversion');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DEFAULT_OPTIONS = {\n  convertShortnames: true,\n  convertUnicode: true,\n  convertAscii: true,\n  style: {\n    backgroundImage: 'url(https://github.com/pladaria/react-emojione/blob/emojione3/assets/sprites/emojione-3.1.2-64x64.png?raw=true)'\n  },\n  onClick: undefined,\n  output: 'emoji' // valid options: 'emoji', 'unicode'\n\n};\nvar asciiToUnicodeCache = new Map();\nvar asciiRegExpToUnicode = new Map();\n\n_asciiToUnicode2.default.forEach(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      reStr = _ref2[0],\n      unicode = _ref2[1];\n\n  return asciiRegExpToUnicode.set(RegExp(reStr), unicode);\n}); // Escape RegExp code borrowed from lodash\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\nvar reHasRegExpChar = RegExp(reRegExpChar.source);\n\nvar escapeRegExp = function escapeRegExp(s) {\n  return s && reHasRegExpChar.test(s) ? s.replace(reRegExpChar, '\\\\$&') : s;\n};\n\nvar convertAsciiToUnicodeOrNull = function convertAsciiToUnicodeOrNull(text) {\n  if (!text) {\n    return '';\n  }\n\n  var str = String(text);\n\n  if (asciiToUnicodeCache.has(str)) {\n    return asciiToUnicodeCache.get(str);\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = asciiRegExpToUnicode.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          regExp = _step$value[0],\n          unicode = _step$value[1];\n\n      if (str.replace(regExp, unicode) === unicode) {\n        asciiToUnicodeCache.set(str, unicode);\n        return unicode;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return null;\n};\n\nvar asciiRegexStr = _asciiToUnicode2.default.map(function (_ref3) {\n  var _ref4 = _slicedToArray(_ref3, 1),\n      reStr = _ref4[0];\n\n  return reStr;\n}).join('|');\n\nvar unicodesRegexStr = _emojiFormatConversion.unicodes.map(escapeRegExp).join('|');\n\nvar shortnamesRegexStr = ':[+-\\\\d\\\\w]+:';\nvar REGEX_CACHE = [];\n\nvar getRegex = function getRegex(withUnicode, withAscii, withShortnames) {\n  var index = (withUnicode ? 1 : 0) + (withAscii ? 2 : 0) + (withShortnames ? 4 : 0);\n\n  if (!REGEX_CACHE[index]) {\n    var parts = [withShortnames ? shortnamesRegexStr : '', withUnicode ? unicodesRegexStr : '', withAscii ? asciiRegexStr : ''].filter(Boolean);\n    REGEX_CACHE[index] = RegExp('(' + parts.join('|') + ')');\n  }\n\n  return REGEX_CACHE[index];\n};\n\nvar startsWithSpace = function startsWithSpace(str) {\n  return /^\\s/.test(str);\n};\n\nvar endsWithSpace = function endsWithSpace(str) {\n  return /\\s$/.test(str);\n};\n\nvar shouldConvertAscii = function shouldConvertAscii(parts, index) {\n  if (parts.length === 1) {\n    return true;\n  }\n\n  if (index === 0) {\n    return startsWithSpace(parts[index + 1]);\n  }\n\n  if (index === parts.length - 1) {\n    return endsWithSpace(parts[index - 1]);\n  }\n\n  return endsWithSpace(parts[index - 1]) && startsWithSpace(parts[index + 1]);\n};\n\nvar emojify = exports.emojify = function emojify(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var mergedOptions = Object.assign({}, DEFAULT_OPTIONS, options);\n  var convertShortnames = mergedOptions.convertShortnames,\n      convertUnicode = mergedOptions.convertUnicode,\n      convertAscii = mergedOptions.convertAscii;\n  var regExp = getRegex(convertUnicode, convertAscii, convertShortnames);\n  var renderCodepoint = (0, _rendererFactory2.default)(mergedOptions);\n  var convertedParts = str.split(regExp).filter(Boolean).map(function (part, index, parts) {\n    if (convertAscii && shouldConvertAscii(parts, index)) {\n      var unicode = convertAsciiToUnicodeOrNull(part);\n\n      if (unicode) {\n        return renderCodepoint(_emojiFormatConversion.unicodeToCodepoint.get(unicode), 'a-' + index);\n      }\n    }\n\n    if (convertShortnames && _emojiFormatConversion.shortToCodepoint.has(part)) {\n      return renderCodepoint(_emojiFormatConversion.shortToCodepoint.get(part), 's-' + index);\n    }\n\n    if (convertUnicode && _emojiFormatConversion.unicodeToCodepoint.has(part)) {\n      return renderCodepoint(_emojiFormatConversion.unicodeToCodepoint.get(part), 'u-' + index);\n    }\n\n    return part;\n  });\n  return mergedOptions.output === 'unicode' ? convertedParts.join('') : convertedParts;\n};\n\nvar Emojify = function (_React$Component) {\n  _inherits(Emojify, _React$Component);\n\n  function Emojify() {\n    _classCallCheck(this, Emojify);\n\n    return _possibleConstructorReturn(this, (Emojify.__proto__ || Object.getPrototypeOf(Emojify)).apply(this, arguments));\n  }\n\n  _createClass(Emojify, [{\n    key: 'traverse',\n    value: function traverse(children, options) {\n      var _this2 = this;\n\n      return _react2.default.Children.map(children, function (child) {\n        if (_react2.default.isValidElement(child)) {\n          return _react2.default.cloneElement(child, {}, _this2.traverse(child.props.children, options));\n        }\n\n        if (typeof child === 'string') {\n          return emojify(child, options);\n        }\n\n        return child;\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      return _react2.default.Children.count(children) ? this.traverse(children, this.props) : null;\n    }\n  }]);\n\n  return Emojify;\n}(_react2.default.Component);\n\nexports.default = Emojify;","map":null,"metadata":{},"sourceType":"script"}