{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahimyolbir/Desktop/Ec-utbildning/mandatory-Backend-Nodejs/chatapp/src/Chat.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport socketIOClient from \"socket.io-client\";\nimport './App.css';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker } from 'emoji-mart';\nimport { username$, removeUsername } from './store';\nimport { emojify } from 'react-emojione';\nimport Login from './Login';\nimport Rooms from './Rooms';\n\nconst Linkify = require('linkifyjs/react'); ///////////////////////////////////////////////////\n///////////////// Scroll Bottom /////////////////\n///////////////////////////////////////////////////\n// window.setInterval(function () {\n//   var elem = document.getElementById('card-bodyId');\n//   elem.scrollTop = elem.scrollHeight;\n// }, 3000);\n///////////////////////////////////////////////////\n///////////////// Clicable Links /////////////////\n///////////////////////////////////////////////////\n\n\nfunction clickableLinks(text) {\n  var options = {\n    /* â€¦ */\n  };\n  let eOptions = {\n    style: {\n      height: 18,\n      width: 18,\n      position: 'relative',\n      top: '-1px'\n    }\n  };\n  let content = emojify(text, eOptions);\n  return React.createElement(Linkify, {\n    tagName: \"span\",\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, content);\n} ///////////////////////////////////////////////////\n///////////////// Close Dropdown /////////////////\n///////////////////////////////////////////////////\n// Close the dropdown if the user clicks outside of it\n\n\nwindow.onclick = function (event) {\n  if (!event.target.matches('.dropbtn')) {\n    var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n    var i;\n\n    for (i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    }\n  }\n};\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMessage = ev => {\n      ev.preventDefault();\n      const mymessage = this.state.message;\n      console.log(mymessage);\n      this.socket.emit('message', {\n        id: this.props.match.params.id,\n        username: this.state.username,\n        content: this.state.message\n      }, response => {\n        console.log(response);\n        this.setState({\n          messages: [...this.state.messages, response.data.newMessage]\n        });\n      });\n    };\n\n    this.addEmoji = e => {\n      //console.log(e.unified)\n      if (e.unified.length <= 5) {\n        let emojiPic = String.fromCodePoint(\"0x\".concat(e.unified));\n        this.setState({\n          message: this.state.message + emojiPic\n        });\n      } else {\n        let sym = e.unified.split('-');\n        let codesArray = [];\n        sym.forEach(el => codesArray.push('0x' + el));\n        console.log(codesArray.length);\n        console.log(codesArray); // [\"0x1f3f3\", \"0xfe0f\"]\n\n        let emojiPic = String.fromCodePoint(...codesArray);\n        this.setState({\n          message: this.state.message + emojiPic\n        });\n      }\n    };\n\n    this.state = {\n      username: username$.value,\n      usernameError: \"\",\n      message: '',\n      messages: [],\n      users: [],\n      hideLogin: false,\n      showEmojiArea: false\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n    this.hideShowEmojiArea = this.hideShowEmojiArea.bind(this);\n    this.dropdownHideShow = this.dropdownHideShow.bind(this);\n    this.logoutButton = this.logoutButton.bind(this);\n  } ////////////////// END OF constructor ////////////////\n\n\n  componentDidMount() {\n    this.socket = socketIOClient('http://localhost:8000');\n    this.socket.on('connection', function () {});\n    this.socket.on('messages', messageArray => {\n      this.setState({\n        messages: messageArray\n      });\n    });\n    this.socket.on(\"new_message\", message => {\n      if (!this.state.users.includes(message.username)) {\n        this.setState({\n          users: [...this.state.users, message.username]\n        });\n      }\n\n      this.setState({\n        messages: [...this.state.messages, message]\n      });\n      console.log(message);\n    });\n    this.loadMessages(this.props.match.params.name);\n    const id = this.props.match.params.id;\n    console.log(\"id \" + id);\n    console.log(this.props.match.params);\n  }\n\n  componentWillUnmount() {\n    this.socket.disconnect();\n    this.socket = null;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.loadMessages(nextProps.match.params.name);\n  }\n\n  loadMessages(roomName) {\n    this.setState({\n      messages: []\n    });\n    axios.get(\"http://localhost:8000/rooms/\".concat(roomName, \"/messages\")).then(response => {\n      let users = [];\n      let messages = response.data;\n      console.log(response.data);\n\n      for (let message of messages) {\n        if (!users.includes(message.username)) {\n          users.push(message.username);\n        }\n      }\n\n      this.setState({\n        users: users,\n        messages: response.data\n      });\n    });\n  }\n\n  // this.setUsername = ev => {\n  //   const username = this.state.username\n  // }\n  //  addMessage = messages => {\n  //   console.log(messages);\n  //   const these_messages = messages;\n  //   this.setState({ messages: these_messages });\n  //   console.log(these_messages);\n  // };\n  ///////////////////////////////////////////////////\n  ///////////////// Dropdown Show /////////////////\n  ///////////////////////////////////////////////////\n  dropdownHideShow() {\n    document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n  } ///////////////////////////////////////////////////\n  ///////////////// Logout  /////////////////\n  ///////////////////////////////////////////////////\n\n\n  logoutButton() {\n    this.setState({\n      hideLogin: false\n    });\n  } ///////////////////////////////////////////////////\n  ///////////////// Hide Show Emoji Area /////////////////\n  ///////////////////////////////////////////////////\n\n\n  hideShowEmojiArea() {\n    console.log(this.state.showEmojiArea);\n    this.setState({\n      showEmojiArea: !this.state.showEmojiArea\n    });\n    return;\n  } ///////////////////////////////////////////////////\n  ///////////////// Add Emoji /////////////////\n  ///////////////////////////////////////////////////\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-fluid h-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"header__lesson\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Mandatory Exercise 1 - Advanced JavaScript with React\"), React.createElement(Rooms, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        display: this.state.showEmojiArea ? \"block\" : \"none\"\n      },\n      className: \"emoji__area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Picker, {\n      onSelect: this.addEmoji,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row justify-content-center h-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 col-xl-6 chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header msg_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex bd-highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \" Loggad in as: \", this.state.username, \" \"))), React.createElement(\"div\", {\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.dropdownHideShow,\n      type: \"button\",\n      className: \"dropbtn\",\n      id: \"action_menu_btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-ellipsis-v\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"myDropdown\",\n      className: \"dropdown-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), \"   Home\"), React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-cogs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), \"  Settings\"), React.createElement(\"a\", {\n      onClick: this.logoutButton,\n      className: \"logout__button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-sign-out-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), \"  Logout [\", this.state.username, \"]\")))), React.createElement(\"div\", {\n      className: \"card-body msg_card_body\",\n      id: \"card-bodyId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"msg_cotainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.state.messages.map((message, key) => {\n      return React.createElement(\"li\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"name__letter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, message.username.charAt(0)), React.createElement(\"div\", {\n        className: \"chat__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"user__name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, message.username), React.createElement(\"span\", {\n        className: \"message__content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, clickableLinks(message.content)), React.createElement(\"span\", {\n        className: \"msg_time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, new Date(message.timestamp).toLocaleString(\"sv-SE\"))));\n    }))), React.createElement(\"div\", {\n      className: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.hideShowEmojiArea,\n      className: \"input-group-text attach_btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"far fa-smile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }))), React.createElement(\"form\", {\n      onSubmit: this.sendMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Message\",\n      required: true,\n      value: this.state.message,\n      onChange: ev => this.setState({\n        message: ev.target.value\n      }),\n      style: {\n        top: 0,\n        left: 0\n      },\n      maxLength: 200,\n      className: \"type_msg form-control \",\n      placeholder: \"Type your message...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"input-group-text send_btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-location-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }))))))))));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/ibrahimyolbir/Desktop/Ec-utbildning/mandatory-Backend-Nodejs/chatapp/src/Chat.js"],"names":["React","Component","axios","socketIOClient","Picker","username$","removeUsername","emojify","Login","Rooms","Linkify","require","clickableLinks","text","options","eOptions","style","height","width","position","top","content","window","onclick","event","target","matches","dropdowns","document","getElementsByClassName","i","length","openDropdown","classList","contains","remove","Chat","constructor","props","sendMessage","ev","preventDefault","mymessage","state","message","console","log","socket","emit","id","match","params","username","response","setState","messages","data","newMessage","addEmoji","e","unified","emojiPic","String","fromCodePoint","sym","split","codesArray","forEach","el","push","value","usernameError","users","hideLogin","showEmojiArea","bind","hideShowEmojiArea","dropdownHideShow","logoutButton","componentDidMount","on","messageArray","includes","loadMessages","name","componentWillUnmount","disconnect","componentWillReceiveProps","nextProps","roomName","get","then","getElementById","toggle","render","display","map","key","charAt","Date","timestamp","toLocaleString","left"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport socketIOClient from \"socket.io-client\";\nimport './App.css';\nimport 'emoji-mart/css/emoji-mart.css'\nimport { Picker } from 'emoji-mart'\nimport { username$, removeUsername } from './store';\nimport { emojify } from 'react-emojione';\nimport Login from './Login';\nimport Rooms from './Rooms';\nconst Linkify = require('linkifyjs/react');\n///////////////////////////////////////////////////\n///////////////// Scroll Bottom /////////////////\n///////////////////////////////////////////////////\n// window.setInterval(function () {\n//   var elem = document.getElementById('card-bodyId');\n//   elem.scrollTop = elem.scrollHeight;\n// }, 3000);\n///////////////////////////////////////////////////\n///////////////// Clicable Links /////////////////\n///////////////////////////////////////////////////\nfunction clickableLinks(text) {\n    var options = {/* â€¦ */ };\n    let eOptions = { style: { height: 18, width: 18, position: 'relative', top: '-1px' } }\n    let content = emojify(text, eOptions);\n    return <Linkify tagName=\"span\" options={options}>{content}</Linkify>;\n}\n///////////////////////////////////////////////////\n///////////////// Close Dropdown /////////////////\n///////////////////////////////////////////////////\n// Close the dropdown if the user clicks outside of it\nwindow.onclick = function (event) {\n    if (!event.target.matches('.dropbtn')) {\n        var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n        var i;\n        for (i = 0; i < dropdowns.length; i++) {\n            var openDropdown = dropdowns[i];\n            if (openDropdown.classList.contains('show')) {\n                openDropdown.classList.remove('show');\n            }\n        }\n    }\n}\n\nclass Chat extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: username$.value,\n            usernameError: \"\",\n            message: '',\n            messages: [],\n            users: [],\n            hideLogin: false,\n            showEmojiArea: false,\n        };\n        this.sendMessage = this.sendMessage.bind(this);\n        this.hideShowEmojiArea = this.hideShowEmojiArea.bind(this);\n        this.dropdownHideShow = this.dropdownHideShow.bind(this);\n        this.logoutButton = this.logoutButton.bind(this);\n    }\n    ////////////////// END OF constructor ////////////////\n\n    componentDidMount() {\n        this.socket = socketIOClient('http://localhost:8000');\n        this.socket.on('connection', function () {\n        });\n\n\n        this.socket.on('messages', (messageArray) => {\n            this.setState({ messages: messageArray });\n          }); \n          \n\n        this.socket.on(\"new_message\", (message) => {\n            if (!this.state.users.includes(message.username)) {\n                this.setState({ users: [...this.state.users, message.username] });\n              }\n            this.setState({\n                messages: [...this.state.messages, message],\n            })\n            console.log(message);\n        })\n        this.loadMessages(this.props.match.params.name);\n        const { id } = this.props.match.params;\n        console.log(\"id \" + id);\n        \n        console.log(this.props.match.params);\n\n    }\n\n    componentWillUnmount() {\n        this.socket.disconnect();\n        this.socket = null;\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.loadMessages(nextProps.match.params.name);\n    }\n    loadMessages(roomName) {\n        this.setState({ messages: [] });\n        axios.get(`http://localhost:8000/rooms/${roomName}/messages`)\n            .then((response) => {\n                let users = [];\n                let messages = response.data;\n                console.log(response.data);\n                \n                for (let message of messages) {\n                    if (!users.includes(message.username)) {\n                        users.push(message.username);\n                    }\n                }\n                this.setState({ users: users, messages: response.data });\n            });\n    }\n\n    sendMessage = (ev) => {\n        ev.preventDefault();\n        const mymessage = this.state.message\n        console.log(mymessage);\n        \n        \n            this\n                .socket\n                .emit('message', {\n                    id: this.props.match.params.id,\n                    username: this.state.username,\n                    content: this.state.message\n                }, (response) => {\n                    console.log(response);\n                    this.setState({ messages: [...this.state.messages, response.data.newMessage] });\n                });\n        \n    }\n    // this.setUsername = ev => {\n    //   const username = this.state.username\n    // }\n\n    //  addMessage = messages => {\n    //   console.log(messages);\n    //   const these_messages = messages;\n    //   this.setState({ messages: these_messages });\n    //   console.log(these_messages);\n    // };\n\n    ///////////////////////////////////////////////////\n    ///////////////// Dropdown Show /////////////////\n    ///////////////////////////////////////////////////\n\n    dropdownHideShow() {\n        document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n    }\n    ///////////////////////////////////////////////////\n    ///////////////// Logout  /////////////////\n    ///////////////////////////////////////////////////\n    logoutButton() {\n        this.setState({ hideLogin: false });\n    }\n    ///////////////////////////////////////////////////\n    ///////////////// Hide Show Emoji Area /////////////////\n    ///////////////////////////////////////////////////\n    hideShowEmojiArea() {\n        console.log(this.state.showEmojiArea);\n        this.setState({ showEmojiArea: !this.state.showEmojiArea });\n        return;\n    }\n\n    ///////////////////////////////////////////////////\n    ///////////////// Add Emoji /////////////////\n    ///////////////////////////////////////////////////\n    addEmoji = (e) => {\n        //console.log(e.unified)\n        if (e.unified.length <= 5) {\n            let emojiPic = String.fromCodePoint(`0x${e.unified}`)\n            this.setState({\n                message: this.state.message + emojiPic\n            })\n        } else {\n            let sym = e.unified.split('-')\n            let codesArray = []\n            sym.forEach(el => codesArray.push('0x' + el))\n            console.log(codesArray.length)\n            console.log(codesArray)  // [\"0x1f3f3\", \"0xfe0f\"]\n            let emojiPic = String.fromCodePoint(...codesArray)\n            this.setState({\n                message: this.state.message + emojiPic\n            })\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"container-fluid h-100\">\n                <h4 className=\"header__lesson\">Mandatory Exercise 1 - Advanced JavaScript with React</h4>\n                <Rooms />\n                {/* ///////////////// Emoji Area ///////////////// */}\n                <span style={{ display: this.state.showEmojiArea ? \"block\" : \"none\" }} className=\"emoji__area\">\n                    <Picker onSelect={this.addEmoji} />\n                </span>\n                {/* ///////////////// Emoji Area ///////////////// */}\n\n                <div className=\"row justify-content-center h-100\">\n                    <div className=\"col-md-8 col-xl-6 chat\">\n                        <div className=\"card\" >\n                            <div className=\"card-header msg_head\">\n                                <div className=\"d-flex bd-highlight\">\n                                    <div className=\"user_info\">\n                                        <span> Loggad in as: {this.state.username} </span>\n                                    </div>\n                                </div>\n                                <div className=\"dropdown\">\n                                    <button onClick={this.dropdownHideShow} type=\"button\" className=\"dropbtn\" id=\"action_menu_btn\"><i className=\"fas fa-ellipsis-v\"></i></button>\n                                    <div id=\"myDropdown\" className=\"dropdown-content\">\n                                        <a href=\"#\"><i className=\"fas fa-home\"></i>   Home</a>\n                                        <a href=\"#\"><i className=\"fas fa-cogs\"></i>  Settings</a>\n                                        <a onClick={this.logoutButton} className=\"logout__button\"><i className=\"fas fa-sign-out-alt\"></i>  Logout [{this.state.username}]</a>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-body msg_card_body\" id=\"card-bodyId\">\n                                <ul className=\"msg_cotainer\">\n                                    {this.state.messages.map((message, key) => {\n                                        return (\n                                            <li key={key}>\n                                                <p className=\"name__letter\">{message.username.charAt(0)}</p>\n                                                <div className=\"chat__text\">\n                                                    <span className=\"user__name\" >{message.username}</span>\n                                                    <span className=\"message__content\">{clickableLinks(message.content)}</span>\n                                                    <span className=\"msg_time\">{new Date(message.timestamp).toLocaleString(\"sv-SE\")}</span>\n                                                </div>\n                                            </li>\n                                        );\n                                    })}\n                                </ul>\n                            </div>\n                            <div className=\"card-footer\">\n                                <div className=\"input-group\">\n                                    <div className=\"input-group-append\">\n                                        <button type=\"button\" onClick={this.hideShowEmojiArea} className=\"input-group-text attach_btn\" >\n                                            <i className=\"far fa-smile\"></i></button>\n                                    </div>\n                                    <form onSubmit={this.sendMessage}>\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Message\"\n                                            required\n                                            value={this.state.message}\n                                            onChange={ev => this.setState({ message: ev.target.value })}\n                                            style={{ top: 0, left: 0 }}\n                                            maxLength={200}\n                                            className=\"type_msg form-control \" placeholder=\"Type your message...\"></input>\n\n                                        <div className=\"input-group-append\">\n                                            <button  type='submit' className=\"input-group-text send_btn\"><i className=\"fas fa-location-arrow\"></i></button>\n                                        </div>\n\n                                    </form>\n                                </div>\n                            </div>\n\n                        </div>\n                        {/* <Login\n              setUsername={this.setUsername}\n              hideLogin={this.state.hideLogin}\n              usernameError={this.state.usernameError}\n              username={this.state.username}\n              handelKeyPress={this.handelKeyPress}\n              onChangeUsername={(e) => this.setState({ username: e.target.value })}\n            /> */}\n                    </div>\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}