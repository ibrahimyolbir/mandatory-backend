{"ast":null,"code":"var _jsxFileName = \"/Users/ibrahimyolbir/Desktop/Ec-utbildning/mandatory-Backend-Nodejs/chatapp/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { updateUsername } from './store';\nimport '../App.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      usernameError: '',\n      color: 'black',\n      isLoggedIn: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.login = this.login.bind(this);\n    this.handelKeyPress = this.handelKeyPress.bind(this);\n  }\n\n  handelKeyPress(e) {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n\n      if (this.state.username.length > 12) {\n        this.setState({\n          usernameError: \"Username must be less 12 characters.\"\n        });\n      } else if (this.state.username.match(/[^a-z0-9_ -]/i)) {\n        this.setState({\n          usernameError: \"The username can only contain alphanumeric characters, “-”, “_” and spaces\"\n        });\n      } else {\n        this.setState({\n          isLoggedIn: true,\n          usernameError: \"\"\n        });\n        updateUsername(this.state.username);\n      }\n    }\n  }\n\n  onChange(event) {\n    this.setState({\n      username: event.target.value,\n      usernameError: ''\n    });\n  }\n\n  login(event) {\n    event.preventDefault();\n\n    if (this.state.username.length > 12) {\n      this.setState({\n        usernameError: \"Username must be less 12 characters.\"\n      });\n    } else if (this.state.username.match(/[^a-z0-9_ -]/i)) {\n      this.setState({\n        usernameError: \"The username can only contain alphanumeric characters, “-”, “_” and spaces\"\n      });\n    } else {\n      this.setState({\n        isLoggedIn: true,\n        usernameError: \"\"\n      });\n      updateUsername(this.state.username);\n    }\n  }\n\n  render() {\n    if (this.state.isLoggedIn === true) {\n      return React.createElement(Redirect, {\n        to: \"/room/:id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"login__page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.props.setUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Whats your Username? \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      onChange: this.onChange,\n      value: this.state.username,\n      onKeyDown: this.props.handelKeyPress,\n      className: \"form-control login-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"login-button\",\n      type: \"submit\",\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Login failed: \"), this.state.usernameError)));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/ibrahimyolbir/Desktop/Ec-utbildning/mandatory-Backend-Nodejs/chatapp/src/components/Login.js"],"names":["React","Component","Redirect","updateUsername","Login","constructor","props","state","username","usernameError","color","isLoggedIn","onChange","bind","login","handelKeyPress","e","keyCode","preventDefault","length","setState","match","event","target","value","render","setUsername"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { updateUsername } from './store';\nimport '../App.css';\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      usernameError: '',\n      color: 'black',\n      isLoggedIn: false,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.login = this.login.bind(this);\n    this.handelKeyPress = this.handelKeyPress.bind(this);\n  }\n  handelKeyPress(e) {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      if (this.state.username.length > 12) {\n        this.setState({ usernameError: \"Username must be less 12 characters.\" });\n      } else if (this.state.username.match(/[^a-z0-9_ -]/i)) {\n        this.setState({ usernameError: \"The username can only contain alphanumeric characters, “-”, “_” and spaces\" });\n      } else {\n        this.setState({ isLoggedIn: true, usernameError: \"\" });\n        updateUsername(this.state.username);\n      }\n    }\n\n  }\n  onChange(event) {\n    this.setState({ username: event.target.value, usernameError: '' });\n  }\n\n  login(event) {\n    event.preventDefault();\n\n    if (this.state.username.length > 12) {\n      this.setState({ usernameError: \"Username must be less 12 characters.\" });\n    }\n    else if (this.state.username.match(/[^a-z0-9_ -]/i)) {\n      this.setState({ usernameError: \"The username can only contain alphanumeric characters, “-”, “_” and spaces\" });\n    }\n    else {\n      this.setState({ isLoggedIn: true, usernameError: \"\" });\n      updateUsername(this.state.username);\n    }\n  }\n\n  render() {\n    if (this.state.isLoggedIn === true) {\n      return <Redirect to='/room/:id' />\n    }\n    return (\n      <div className=\"login__page\" >\n        <form onSubmit={this.props.setUsername}>\n          <h3>Whats your Username? </h3>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            onChange={this.onChange}\n            value={this.state.username}\n            onKeyDown={this.props.handelKeyPress}\n\n            className=\"form-control login-input\" />\n          <button className='login-button' type='submit' onClick={this.login}>Login</button>\n          <span className=\"error\"><strong>Login failed: </strong>{this.state.usernameError}\n          </span>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}