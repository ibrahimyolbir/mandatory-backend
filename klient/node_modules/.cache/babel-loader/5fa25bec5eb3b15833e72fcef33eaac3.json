{"ast":null,"code":"import _slicedToArray from \"/Users/ibrahimyolbir/Desktop/Ec-utbildning/mandatory-Backend-Nodejs/chatapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ibrahimyolbir/Desktop/Ec-utbildning/mandatory-Backend-Nodejs/chatapp/src/components/chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport styles from './chat.module.css';\nimport Chatboard from \"./chatboard\";\nimport Dialog from \"./dialog\";\nimport axios from \"axios\";\nimport openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:5000');\n\nfunction Chat(props) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        toogle = _useState4[0],\n        setToggle = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newRoom = _useState6[0],\n        setNewRoom = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        renderRoom = _useState8[0],\n        setRenderRoom = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        rooms = _useState10[0],\n        setRooms = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        newMsg = _useState12[0],\n        setNewMsg = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        users = _useState14[0],\n        setUsers = _useState14[1];\n\n  socket.on(\"new message\", function (data) {\n    setNewMsg(data);\n    console.log(users);\n  });\n  useEffect(() => {\n    if (username === \"\") return;\n    socket.emit(\"new user\", username);\n    socket.on(\"get users\", function (data) {\n      setUsers(data);\n    });\n  }, [username]);\n  useEffect(() => {\n    setUsername(props.location.state.username);\n    axios.get(\"/api\").then(res => {\n      let data = res.data.data;\n      setRooms(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [newRoom, toogle]);\n\n  function roomId() {\n    return parseInt(Date.now() + Math.random());\n  }\n\n  function getRoom(id) {\n    setRenderRoom(id);\n  }\n\n  function deleteRoom(id) {\n    axios.delete(\"/delete/\".concat(id)).then(res => {\n      console.log(res);\n      setToggle(!toogle);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: styles.chat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, newRoom === true ? React.createElement(Dialog, {\n    exitDialog: () => setNewRoom(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: styles.chat__header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: styles['chat__header--text'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"WarChat\"), React.createElement(\"h1\", {\n    className: styles['chat__header--text'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, username)), React.createElement(\"div\", {\n    className: styles.chat__users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles[\"chat__users--image\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    className: styles[\"chat__users--header\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Online Users\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, users.map(user => {\n    return React.createElement(\"div\", {\n      key: roomId(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: styles[\"chat__users--user\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, user));\n  }))), React.createElement(\"div\", {\n    className: styles.chat__board,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.chat__navbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles[\"chat__navbar__header\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    onClick: () => {\n      setNewRoom(!newRoom);\n    },\n    className: styles[\"chat__navbar__text\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Create Room\")), React.createElement(\"div\", {\n    className: styles[\"chat__navbar__rooms\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, rooms.map(room => {\n    return React.createElement(\"div\", {\n      className: styles[\"chat__navbar--room\"],\n      key: room.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles[\"chat__navbar--box\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: () => {\n        getRoom(room.id);\n      },\n      className: styles[\"chat__navbar--room--name\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, room.roomName)), React.createElement(\"div\", {\n      className: styles[\"chat__navbar--box\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      onClick: () => {\n        deleteRoom(room.id);\n      },\n      className: \"material-icons \".concat(styles['chat__navbar__icon']),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"close\"))));\n  }))), React.createElement(Chatboard, {\n    newMsg: newMsg,\n    username: username,\n    socket: socket,\n    renderRoom: renderRoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/ibrahimyolbir/Desktop/Ec-utbildning/mandatory-Backend-Nodejs/chatapp/src/components/chat.js"],"names":["React","useState","useEffect","styles","Chatboard","Dialog","axios","openSocket","socket","Chat","props","username","setUsername","toogle","setToggle","newRoom","setNewRoom","renderRoom","setRenderRoom","rooms","setRooms","newMsg","setNewMsg","users","setUsers","on","data","console","log","emit","location","state","get","then","res","catch","err","roomId","parseInt","Date","now","Math","random","getRoom","id","deleteRoom","delete","chat","chat__header","chat__users","map","user","chat__board","chat__navbar","room","roomName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './chat.module.css';\nimport Chatboard from \"./chatboard\"\nimport Dialog from \"./dialog\"\nimport axios from \"axios\"\nimport openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:5000');\n\nfunction Chat(props) {\n    const [username, setUsername] = useState(\"\");\n    const [toogle,setToggle] = useState(false);\n    const [newRoom, setNewRoom] = useState(false);\n    const [renderRoom, setRenderRoom] = useState(\"\");\n    const [rooms, setRooms] = useState([]);\n    const [newMsg, setNewMsg] = useState(\"\");\n    const[users,setUsers] = useState ([]);\n\n    socket.on(\"new message\", function(data){\n        setNewMsg(data);\n        console.log(users)\n    })\n\n    useEffect(()=>{\n        if(username === \"\")return;\n        socket.emit(\"new user\", username)\n        socket.on(\"get users\", function(data){\n            setUsers(data);\n        })\n    },[username])\n\n    useEffect(() => {\n        setUsername(props.location.state.username)\n      \n        axios.get(\"/api\")\n            .then(res => {\n                let data = res.data.data;\n                setRooms(data)\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    \n    }, [newRoom, toogle]);\n\n    function roomId() {\n        return parseInt(Date.now() + Math.random());\n    }\n\n    function getRoom(id) {\n        setRenderRoom(id)\n    }\n\n    function deleteRoom(id) {\n        axios.delete(`/delete/${id}`)\n        .then(res =>{\n            console.log(res);\n            setToggle(!toogle);\n        })\n        .catch(err =>{\n            console.log(err);\n        })\n    }\n    return (\n\n        <div className={styles.chat}>\n            {newRoom === true ? <Dialog exitDialog={() => setNewRoom(false)} /> : null}\n            <div className={styles.chat__header}>\n                <h1 className={styles['chat__header--text']}>WarChat</h1>\n                <h1 className={styles['chat__header--text']}>{username}</h1>\n            </div>\n            <div className={styles.chat__users}>\n                <div className={styles[\"chat__users--image\"]}></div>\n                <h2 className={styles[\"chat__users--header\"]} >Online Users</h2>\n                <div>\n                {\n                        users.map(user =>{\n                            return(\n                                <div key={roomId()}>\n                                <span className={styles[\"chat__users--user\"]} >{user}</span>\n                                </div>\n                            )\n                        })\n                    }\n                 \n                </div>\n            </div>\n            <div className={styles.chat__board}>\n                <div className={styles.chat__navbar}>\n                    <div className={styles[\"chat__navbar__header\"]}>\n                        <h3 onClick={() => { setNewRoom(!newRoom) }} className={styles[\"chat__navbar__text\"]}>Create Room</h3>\n                    </div>\n                    <div className={styles[\"chat__navbar__rooms\"]}>\n                    {\n                            rooms.map(room => {\n                                return (\n                                    <div className={styles[\"chat__navbar--room\"]} key={room.id}>\n                                        <div className={styles[\"chat__navbar--box\"]}>\n                                            <span onClick={() => { getRoom(room.id) }} className={styles[\"chat__navbar--room--name\"]}>{room.roomName}</span>\n                                        </div>\n                                        <div className={styles[\"chat__navbar--box\"]}>\n                                            <span><i onClick= {()=>{deleteRoom(room.id)}} className={`material-icons ${styles['chat__navbar__icon']}`}>close</i></span>\n                                        </div>\n\n                                    </div>\n                                )\n                            }\n                            )\n                        }\n                    </div>\n                </div>\n                <Chatboard newMsg={newMsg} username={username} socket={socket} renderRoom={renderRoom} />\n            </div>\n        </div>\n\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}