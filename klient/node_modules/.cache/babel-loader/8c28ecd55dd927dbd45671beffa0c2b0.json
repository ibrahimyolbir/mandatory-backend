{"ast":null,"code":"import _slicedToArray from \"/Users/ibrahimyolbir/Desktop/Ec-utbildning/mandatory-Backend-Nodejs/chatapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ibrahimyolbir/Desktop/Ec-utbildning/mandatory-Backend-Nodejs/chatapp/src/components/chatboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport styles from './chatboard.module.css';\nimport axios from \"axios\";\n\nfunction Chat(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        room = _useState2[0],\n        setRoom = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        messages = _useState4[0],\n        setMessages = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        sendMessage = _useState6[0],\n        setSendMessage = _useState6[1];\n\n  const container = React.useRef();\n  useEffect(() => {\n    if (props.renderRoom) return;\n    axios.get(\"/room/1\").then(res => {\n      console.log(res);\n      setRoom([res.data.roomName]);\n      setMessages(res.data.messages);\n      container.current.scrollTo(0, container.current.scrollHeight);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [props.newMsg]);\n  useEffect(() => {\n    if (!props.renderRoom) return;\n    axios.get(\"/room/\".concat(props.renderRoom)).then(res => {\n      setRoom([res.data.roomName]);\n      setMessages(res.data.messages);\n      container.current.scrollTo(0, container.current.scrollHeight);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [props.renderRoom, props.newMsg]);\n\n  function handleMessage(e) {\n    let socket = props.socket;\n    e.preventDefault();\n\n    if (sendMessage.length > 1 && sendMessage.length < 200) {\n      socket.emit(\"send message\", {\n        username: props.username,\n        msg: sendMessage,\n        room: room.join(\" \")\n      });\n      setSendMessage(\"\");\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: styles.chat__container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.chat__board,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles[\"chat__board--header\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: styles[\"chat__board--text\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, room)), React.createElement(\"div\", {\n    ref: container,\n    className: styles[\"chat__board--users\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, messages.map(msg => {\n    return React.createElement(\"div\", {\n      className: styles[\"chat__board--user\"],\n      key: msg.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, msg.user, \": \"), msg.message));\n  })), React.createElement(\"div\", {\n    className: styles[\"chat__board--message\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: sendMessage,\n    onChange: e => {\n      setSendMessage(e.target.value);\n    },\n    className: styles[\"chat__board--input\"],\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: styles[\"chat__board--button\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Send\")))));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/ibrahimyolbir/Desktop/Ec-utbildning/mandatory-Backend-Nodejs/chatapp/src/components/chatboard.js"],"names":["React","useState","useEffect","styles","axios","Chat","props","room","setRoom","messages","setMessages","sendMessage","setSendMessage","container","useRef","renderRoom","get","then","res","console","log","data","roomName","current","scrollTo","scrollHeight","catch","err","newMsg","handleMessage","e","socket","preventDefault","length","emit","username","msg","join","chat__container","chat__board","map","id","user","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './chatboard.module.css';\nimport axios from \"axios\"\n\n\nfunction Chat(props) {\n    const [room, setRoom] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [sendMessage, setSendMessage] = useState(\"\");\n    const container = React.useRef();\n    useEffect(() => {\n        if(props.renderRoom) return;\n        axios.get(\"/room/1\")\n            .then(res => {\n                console.log(res);\n                setRoom([res.data.roomName]);\n                setMessages(res.data.messages);\n                container.current.scrollTo(0, container.current.scrollHeight);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [props.newMsg]);\n\n    useEffect(() => {\n        if (!props.renderRoom) return\n        axios.get(`/room/${props.renderRoom}`)\n            .then(res => {\n                setRoom([res.data.roomName]);\n                setMessages(res.data.messages)\n                container.current.scrollTo(0, container.current.scrollHeight);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [props.renderRoom, props.newMsg]);\n\n    function handleMessage(e) {\n        let socket = props.socket\n        e.preventDefault();\n        if (sendMessage.length > 1 && sendMessage.length < 200) {\n            socket.emit(\"send message\", {\n                username: props.username,\n                msg: sendMessage,\n                room: room.join(\" \"),\n            })\n            setSendMessage(\"\");\n        }\n    }\n\n    return (\n\n        <div  className={styles.chat__container}>\n            <div className={styles.chat__board}>\n                <div className={styles[\"chat__board--header\"]}>\n                    <h2 className={styles[\"chat__board--text\"]}>{room}</h2>\n                </div>\n                <div ref={container} className={styles[\"chat__board--users\"]}>\n                    {\n                        messages.map(msg => {\n                            return (\n                                <div className={styles[\"chat__board--user\"]} key={msg.id}>\n                                    <p><strong>{msg.user}: </strong>{msg.message}</p>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                <div className={styles[\"chat__board--message\"]}>\n                    <form onSubmit={handleMessage}>\n                        <input value={sendMessage} onChange={(e) => { setSendMessage(e.target.value) }} className={styles[\"chat__board--input\"]} type=\"text\" />\n                        <button className={styles[\"chat__board--button\"]}>Send</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}