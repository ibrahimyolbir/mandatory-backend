{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.AMPERSAND = exports.CLOSEPAREN = exports.CLOSEANGLEBRACKET = exports.CLOSEBRACKET = exports.CLOSEBRACE = exports.OPENPAREN = exports.OPENANGLEBRACKET = exports.OPENBRACKET = exports.OPENBRACE = exports.WS = exports.TLD = exports.SYM = exports.UNDERSCORE = exports.SLASH = exports.MAILTO = exports.PROTOCOL = exports.QUERY = exports.POUND = exports.PLUS = exports.NUM = exports.NL = exports.LOCALHOST = exports.PUNCTUATION = exports.DOT = exports.COLON = exports.AT = exports.DOMAIN = exports.Base = undefined;\n\nvar _createTokenClass = require('./create-token-class');\n\nvar _class = require('../../utils/class');\n/******************************************************************************\n\tText Tokens\n\tTokens composed of strings\n******************************************************************************/\n\n/**\n\tAbstract class used for manufacturing text tokens.\n\tPass in the value this token represents\n\n\t@class TextToken\n\t@abstract\n*/\n\n\nvar TextToken = (0, _createTokenClass.createTokenClass)();\nTextToken.prototype = {\n  toString: function toString() {\n    return this.v + '';\n  }\n};\n\nfunction inheritsToken(value) {\n  var props = value ? {\n    v: value\n  } : {};\n  return (0, _class.inherits)(TextToken, (0, _createTokenClass.createTokenClass)(), props);\n}\n/**\n\tA valid domain token\n\t@class DOMAIN\n\t@extends TextToken\n*/\n\n\nvar DOMAIN = inheritsToken();\n/**\n\t@class AT\n\t@extends TextToken\n*/\n\nvar AT = inheritsToken('@');\n/**\n\tRepresents a single colon `:` character\n\n\t@class COLON\n\t@extends TextToken\n*/\n\nvar COLON = inheritsToken(':');\n/**\n\t@class DOT\n\t@extends TextToken\n*/\n\nvar DOT = inheritsToken('.');\n/**\n\tA character class that can surround the URL, but which the URL cannot begin\n\tor end with. Does not include certain English punctuation like parentheses.\n\n\t@class PUNCTUATION\n\t@extends TextToken\n*/\n\nvar PUNCTUATION = inheritsToken();\n/**\n\tThe word localhost (by itself)\n\t@class LOCALHOST\n\t@extends TextToken\n*/\n\nvar LOCALHOST = inheritsToken();\n/**\n\tNewline token\n\t@class NL\n\t@extends TextToken\n*/\n\nvar NL = inheritsToken('\\n');\n/**\n\t@class NUM\n\t@extends TextToken\n*/\n\nvar NUM = inheritsToken();\n/**\n\t@class PLUS\n\t@extends TextToken\n*/\n\nvar PLUS = inheritsToken('+');\n/**\n\t@class POUND\n\t@extends TextToken\n*/\n\nvar POUND = inheritsToken('#');\n/**\n\tRepresents a web URL protocol. Supported types include\n\n\t* `http:`\n\t* `https:`\n\t* `ftp:`\n\t* `ftps:`\n\n\t@class PROTOCOL\n\t@extends TextToken\n*/\n\nvar PROTOCOL = inheritsToken();\n/**\n\tRepresents the start of the email URI protocol\n\n\t@class MAILTO\n\t@extends TextToken\n*/\n\nvar MAILTO = inheritsToken('mailto:');\n/**\n\t@class QUERY\n\t@extends TextToken\n*/\n\nvar QUERY = inheritsToken('?');\n/**\n\t@class SLASH\n\t@extends TextToken\n*/\n\nvar SLASH = inheritsToken('/');\n/**\n\t@class UNDERSCORE\n\t@extends TextToken\n*/\n\nvar UNDERSCORE = inheritsToken('_');\n/**\n\tOne ore more non-whitespace symbol.\n\t@class SYM\n\t@extends TextToken\n*/\n\nvar SYM = inheritsToken();\n/**\n\t@class TLD\n\t@extends TextToken\n*/\n\nvar TLD = inheritsToken();\n/**\n\tRepresents a string of consecutive whitespace characters\n\n\t@class WS\n\t@extends TextToken\n*/\n\nvar WS = inheritsToken();\n/**\n\tOpening/closing bracket classes\n*/\n\nvar OPENBRACE = inheritsToken('{');\nvar OPENBRACKET = inheritsToken('[');\nvar OPENANGLEBRACKET = inheritsToken('<');\nvar OPENPAREN = inheritsToken('(');\nvar CLOSEBRACE = inheritsToken('}');\nvar CLOSEBRACKET = inheritsToken(']');\nvar CLOSEANGLEBRACKET = inheritsToken('>');\nvar CLOSEPAREN = inheritsToken(')');\nvar AMPERSAND = inheritsToken('&');\nexports.Base = TextToken;\nexports.DOMAIN = DOMAIN;\nexports.AT = AT;\nexports.COLON = COLON;\nexports.DOT = DOT;\nexports.PUNCTUATION = PUNCTUATION;\nexports.LOCALHOST = LOCALHOST;\nexports.NL = NL;\nexports.NUM = NUM;\nexports.PLUS = PLUS;\nexports.POUND = POUND;\nexports.QUERY = QUERY;\nexports.PROTOCOL = PROTOCOL;\nexports.MAILTO = MAILTO;\nexports.SLASH = SLASH;\nexports.UNDERSCORE = UNDERSCORE;\nexports.SYM = SYM;\nexports.TLD = TLD;\nexports.WS = WS;\nexports.OPENBRACE = OPENBRACE;\nexports.OPENBRACKET = OPENBRACKET;\nexports.OPENANGLEBRACKET = OPENANGLEBRACKET;\nexports.OPENPAREN = OPENPAREN;\nexports.CLOSEBRACE = CLOSEBRACE;\nexports.CLOSEBRACKET = CLOSEBRACKET;\nexports.CLOSEANGLEBRACKET = CLOSEANGLEBRACKET;\nexports.CLOSEPAREN = CLOSEPAREN;\nexports.AMPERSAND = AMPERSAND;","map":null,"metadata":{},"sourceType":"script"}