{"ast":null,"code":"import _objectSpread from \"/Users/ibrahimyolbir/Desktop/Ec-utbildning/mandatory-Backend-Nodejs/chatapp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/ibrahimyolbir/Desktop/Ec-utbildning/mandatory-Backend-Nodejs/chatapp/src/components/Chat.js\";\nimport React, { Component } from 'react';\nimport socketIOClient from \"socket.io-client\";\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      message: '',\n      usernameError: \"\",\n      set: 'Set',\n      disable: 'show',\n      disable2: false,\n      intervalIsSet: false,\n      messages: [],\n      chatHistory: []\n    }; // this has to be something other than localhost.\n\n    this.socket = socketIOClient('http://ec2-13-53-66-202.eu-north-1.compute.amazonaws.com:3000');\n    this.socket.on('messages', function (messages) {\n      //addMessage(data);\n      console.log(messages);\n    });\n    this.socket.on(\"new_message\", message => {\n      console.log(message);\n    });\n\n    this.sendMessage = ev => {\n      ev.preventDefault();\n      const mymessage = this.state.message;\n\n      if (mymessage.length !== 0) {\n        this.socket.emit('message', {\n          username: this.state.username,\n          content: this.state.message\n        }, response => {\n          console.log(response);\n        });\n        this.setState({\n          message: ''\n        });\n      }\n    };\n\n    this.setUsername = ev => {\n      if (!this.isEnabled()) {\n        ev.preventDefault();\n        return;\n      }\n\n      const username = this.state.username;\n      const err = this.validate();\n\n      if (!err) {\n        this.setState({\n          username: username,\n          disable: 'hide',\n          disable2: true,\n          set: ''\n        });\n      }\n    };\n\n    const addMessage = data => {\n      console.log(data);\n      const these_messages = [...this.state.messages, data];\n      this.setState({\n        messages: these_messages\n      });\n      this.state.chatHistory.push(these_messages);\n      localStorage.setItem('these_messages', JSON.stringify(this.state.chatHistory));\n      localStorage.setItem('message', \"\");\n    };\n\n    this.isEnabled = () => {\n      const username = this.state.username;\n      return username.length > 0;\n    };\n\n    this.validate = () => {\n      const errors = {\n        usernameError: \"\"\n      };\n      let isError = false;\n\n      if (this.state.username.length < 5) {\n        isError = true;\n        errors.usernameError = \"Username must be at least 5 characters long\";\n      }\n\n      this.setState(_objectSpread({}, this.state, errors));\n      return isError;\n    }; // end of constructor\n\n  }\n\n  hydrateStateWithLocalStorage() {\n    // for all items in state\n    for (let key in this.state) {\n      // if the key exists in localStorage\n      if (localStorage.hasOwnProperty(key)) {\n        // get the key's value from localStorage\n        let value = localStorage.getItem(key); // parse the localStorage string and setState\n\n        try {\n          value = JSON.parse(value);\n          this.setState({\n            [key]: value\n          });\n        } catch (e) {\n          // handle empty string\n          this.setState({\n            [key]: value\n          });\n        }\n      }\n    }\n  }\n\n  saveStateToLocalStorage() {\n    // for every item in React state\n    for (let key in this.state) {\n      // save to localStorage\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    }\n  }\n\n  componentDidMount() {\n    this.hydrateStateWithLocalStorage(); // add event listener to save state to localStorage when user leaves/refreshes\n    // the page\n\n    window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this)); // saves if component has a chance to unmount\n\n    this.saveStateToLocalStorage();\n  }\n\n  render() {\n    const isEnab = this.isEnabled();\n    return React.createElement(\"div\", {\n      className: \"chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"chat_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Chat Demo Still Unsure\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.state.messages.map((message, key) => {\n      return React.createElement(\"div\", {\n        className: \"chat_text\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, message.username, \": \", message.message);\n    }))), React.createElement(\"div\", {\n      className: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.state.set, \"Username\"), React.createElement(\"form\", {\n      onSubmit: this.setUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, this.state.usernameError), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: this.state.username,\n      onChange: ev => this.setState({\n        username: ev.target.value\n      }),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: this.state.disable,\n      disabled: !isEnab,\n      className: \"btn btn-primary btn-sm mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Set\"))), React.createElement(\"div\", {\n      className: \"card-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Message\",\n      required: true,\n      value: this.state.message,\n      onChange: ev => this.setState({\n        message: ev.target.value\n      }),\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.sendMessage,\n      className: \"btn btn-primary form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Send\"))))));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/ibrahimyolbir/Desktop/Ec-utbildning/mandatory-Backend-Nodejs/chatapp/src/components/Chat.js"],"names":["React","Component","socketIOClient","Chat","constructor","props","state","username","message","usernameError","set","disable","disable2","intervalIsSet","messages","chatHistory","socket","on","console","log","sendMessage","ev","preventDefault","mymessage","length","emit","content","response","setState","setUsername","isEnabled","err","validate","addMessage","data","these_messages","push","localStorage","setItem","JSON","stringify","errors","isError","hydrateStateWithLocalStorage","key","hasOwnProperty","value","getItem","parse","e","saveStateToLocalStorage","componentDidMount","window","addEventListener","bind","componentWillUnmount","removeEventListener","render","isEnab","map","target"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport socketIOClient from \"socket.io-client\";\n\n\nclass Chat extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            message: '',\n            usernameError: \"\",\n            set: 'Set',\n            disable: 'show',\n            disable2: false,\n            intervalIsSet: false,\n            messages: [],\n            chatHistory: []\n        };\n\n        // this has to be something other than localhost.\n\n        this.socket = socketIOClient('http://ec2-13-53-66-202.eu-north-1.compute.amazonaws.com:3000');\n\n        this\n            .socket\n            .on('messages', function (messages) {\n                //addMessage(data);\n                console.log(messages);\n            });\n\n        this.socket.on(\"new_message\", (message) => {\n            console.log(message);\n        })\n\n        this.sendMessage = ev => {\n            ev.preventDefault();\n\n            const mymessage = this.state.message\n\n            if (mymessage.length !== 0) {\n\n                this\n                    .socket\n                    .emit('message', {\n                        username: this.state.username,\n                        content: this.state.message\n                    }, (response) => {\n                        console.log(response);\n                    });\n\n                this.setState({message: ''});\n\n            }\n\n        }\n        this.setUsername = ev => {\n\n            if (!this.isEnabled()) {\n                ev.preventDefault();\n                return;\n            }\n\n            const username = this.state.username\n\n            const err = this.validate();\n\n            if (!err) {\n                this.setState({username: username, disable: 'hide', disable2: true, set: ''});\n\n            }\n\n        }\n\n        const addMessage = data => {\n            console.log(data);\n\n            const these_messages = [\n                ...this.state.messages,\n                data\n            ];\n            this.setState({messages: these_messages});\n\n            this\n                .state\n                .chatHistory\n                .push(these_messages);\n            localStorage.setItem('these_messages', JSON.stringify(this.state.chatHistory));\n            localStorage.setItem('message', \"\");\n\n        };\n\n        this.isEnabled = () => {\n            const {username} = this.state\n            return (username.length > 0);\n\n        }\n\n        this.validate = () => {\n\n            const errors = {\n                usernameError: \"\"\n            };\n\n            let isError = false;\n\n            if (this.state.username.length < 5) {\n                isError = true;\n                errors.usernameError = \"Username must be at least 5 characters long\";\n            }\n\n            this.setState({\n                ...this.state,\n                ...errors\n            });\n\n            return isError;\n\n        }\n\n        // end of constructor\n    }\n\n    hydrateStateWithLocalStorage() {\n        // for all items in state\n        for (let key in this.state) {\n            // if the key exists in localStorage\n            if (localStorage.hasOwnProperty(key)) {\n                // get the key's value from localStorage\n                let value = localStorage.getItem(key);\n\n                // parse the localStorage string and setState\n                try {\n                    value = JSON.parse(value);\n                    this.setState({[key]: value});\n                } catch (e) {\n                    // handle empty string\n                    this.setState({[key]: value});\n                }\n            }\n        }\n    }\n\n    saveStateToLocalStorage() {\n        // for every item in React state\n        for (let key in this.state) {\n            // save to localStorage\n            localStorage.setItem(key, JSON.stringify(this.state[key]));\n        }\n    }\n\n    componentDidMount() {\n        this.hydrateStateWithLocalStorage();\n\n        // add event listener to save state to localStorage when user leaves/refreshes\n        // the page\n        window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\n\n        // saves if component has a chance to unmount\n        this.saveStateToLocalStorage();\n    }\n\n    render() {\n\n        const isEnab = this.isEnabled();\n\n        return (\n\n            <div className=\"chat\">\n                <h3 className=\"chat_head\">Chat Demo Still Unsure</h3>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n\n                                <hr/>\n                                <div className=\"messages\">\n\n                                    {this\n                                        .state\n                                        .messages\n                                        .map((message, key) => {\n                                            return (\n                                                <div className=\"chat_text\" key={key}>\n                                                    {message.username}: {message.message}</div>\n\n                                            );\n                                        })}\n                                    {/* <SimpleStorage parent={this}/> */}\n                                </div>\n\n                            </div>\n                            <div className=\"card-footer\">\n\n                                <h6>\n                                    {this.state.set}\n                                    Username</h6>\n\n                                <form onSubmit={this.setUsername}>\n                                    <small className=\"error\">{this.state.usernameError}\n                                    </small>\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Username\"\n                                        value={this.state.username}\n                                        \n                                        onChange={ev => this.setState({username: ev.target.value})}\n                                        className=\"form-control\"/>\n                                    <button\n                                        id={this.state.disable}\n                                        disabled={!isEnab}\n                                        className=\"btn btn-primary btn-sm mt-3\">Set</button>\n                                </form>\n\n                            </div>\n\n                            <div className=\"card-footer\">\n\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Message\"\n                                    required\n                                    value={this.state.message}\n                                    onChange={ev => this.setState({message: ev.target.value})}\n                                    className=\"form-control\"/>\n                                <br/>\n                                <button onClick={this.sendMessage} className=\"btn btn-primary form-control\">Send</button>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}